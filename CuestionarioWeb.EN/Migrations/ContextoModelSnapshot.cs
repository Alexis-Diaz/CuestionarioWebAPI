// <auto-generated />
using System;
using CuestionarioWeb.EN;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CuestionarioWeb.EN.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CuestionarioWeb.EN.Pregunta", b =>
                {
                    b.Property<int>("IdPregunta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Estado")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("FechaDePregunta")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("PreguntaFormulada")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdPregunta");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Preguntas");
                });

            modelBuilder.Entity("CuestionarioWeb.EN.Reaccion", b =>
                {
                    b.Property<int>("IdReaccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TipoReaccion")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("IdReaccion");

                    b.ToTable("Reacciones");
                });

            modelBuilder.Entity("CuestionarioWeb.EN.ReaccionUsuarioRespuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdReaccion")
                        .HasColumnType("int");

                    b.Property<int>("IdRespuesta")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdReaccion");

                    b.HasIndex("IdRespuesta");

                    b.HasIndex("IdUsuario");

                    b.ToTable("ReaccionUsuarioRespuestas");
                });

            modelBuilder.Entity("CuestionarioWeb.EN.Respuesta", b =>
                {
                    b.Property<int>("IdRespuesta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AutoReferencia")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaDeRespuesta")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPregunta")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("RespuestaEmitida")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRespuesta");

                    b.HasIndex("IdPregunta");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Respuestas");
                });

            modelBuilder.Entity("CuestionarioWeb.EN.RolUsuario", b =>
                {
                    b.Property<int>("IdRolUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TipoRolUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRolUsuario");

                    b.ToTable("RolUsuarios");
                });

            modelBuilder.Entity("CuestionarioWeb.EN.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdRolUsuario")
                        .HasColumnType("int");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdRolUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("CuestionarioWeb.EN.Pregunta", b =>
                {
                    b.HasOne("CuestionarioWeb.EN.Usuario", "Usuario_en")
                        .WithMany("Preguntas_list")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario_en");
                });

            modelBuilder.Entity("CuestionarioWeb.EN.ReaccionUsuarioRespuesta", b =>
                {
                    b.HasOne("CuestionarioWeb.EN.Reaccion", "Reaccion_en")
                        .WithMany("ReaccionUsuarioRespuesta_list")
                        .HasForeignKey("IdReaccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CuestionarioWeb.EN.Respuesta", "Respuesta_en")
                        .WithMany("ReaccionUsuarioRespuesta_list")
                        .HasForeignKey("IdRespuesta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CuestionarioWeb.EN.Usuario", "Usuario_en")
                        .WithMany("ReaccionUsuarioRespuesta_list")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reaccion_en");

                    b.Navigation("Respuesta_en");

                    b.Navigation("Usuario_en");
                });

            modelBuilder.Entity("CuestionarioWeb.EN.Respuesta", b =>
                {
                    b.HasOne("CuestionarioWeb.EN.Pregunta", "Pregunta_en")
                        .WithMany("Respuestas_list")
                        .HasForeignKey("IdPregunta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CuestionarioWeb.EN.Usuario", "Usuario_en")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pregunta_en");

                    b.Navigation("Usuario_en");
                });

            modelBuilder.Entity("CuestionarioWeb.EN.Usuario", b =>
                {
                    b.HasOne("CuestionarioWeb.EN.RolUsuario", "RolUsuario_en")
                        .WithMany("Usuario_list")
                        .HasForeignKey("IdRolUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RolUsuario_en");
                });

            modelBuilder.Entity("CuestionarioWeb.EN.Pregunta", b =>
                {
                    b.Navigation("Respuestas_list");
                });

            modelBuilder.Entity("CuestionarioWeb.EN.Reaccion", b =>
                {
                    b.Navigation("ReaccionUsuarioRespuesta_list");
                });

            modelBuilder.Entity("CuestionarioWeb.EN.Respuesta", b =>
                {
                    b.Navigation("ReaccionUsuarioRespuesta_list");
                });

            modelBuilder.Entity("CuestionarioWeb.EN.RolUsuario", b =>
                {
                    b.Navigation("Usuario_list");
                });

            modelBuilder.Entity("CuestionarioWeb.EN.Usuario", b =>
                {
                    b.Navigation("Preguntas_list");

                    b.Navigation("ReaccionUsuarioRespuesta_list");
                });
#pragma warning restore 612, 618
        }
    }
}
